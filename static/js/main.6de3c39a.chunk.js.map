{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/Home/Home.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/EmptyResponseError/EmptyResponseError.tsx","components/Loader/Loader.tsx","components/LoadingError/LoadingError.tsx","components/PeopleTable/PeopleTable.tsx","pages/People/People.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","Home","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","EmptyResponseError","Loader","LoadingError","PeopleTable","people","personSlug","useParams","map","name","sex","born","died","fatherName","motherName","slug","mother","find","mom","father","dad","classnames","People","useState","setPeople","hasLoadingError","setHasLoadingError","loading","setLoading","emptyResponse","setEmptyResponse","useEffect","loadPeople","data","length","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"mQASaA,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC3C,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UACE,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAChB,cACA,CAAE,8BAA+BD,GAFnC,EAHJ,SASGF,GAGN,ECpBYI,EAAY,WACvB,OACE,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,UAAUC,KAAK,iBAKxC,ECjBYM,EAAW,WACtB,OACE,oBAAIL,UAAU,QAAd,sBAEH,ECJYM,EAAkB,WAC7B,OACE,oBAAIN,UAAU,QAAd,2BAGH,E,6BCJKO,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCZM,IAAMQ,EAAyB,WACpC,OACE,mBAAG,UAAQ,kBAAX,8CAIH,ECNYC,G,MAAS,kBACpB,qBAAKlB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCATmB,EAAmB,WAC9B,OACE,mBAAG,UAAQ,qBAAqBnB,UAAU,kBAA1C,iCAIH,ECCYoB,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BC,EAAeC,cAAfD,WAER,OACE,wBACE,UAAQ,cACRtB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOG,KAAI,YAQL,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,IACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,KAEMC,EAASX,EAAOY,MACpB,SAACC,GAAD,OAASJ,IAAeI,EAAIT,IAA5B,IAEIU,EAASd,EAAOY,MACpB,SAACG,GAAD,OAASP,IAAeO,EAAIX,IAA5B,IAGF,OACE,qBACE,UAAQ,SAERzB,UAAWqC,IAAW,CACpB,yBAA0Bf,IAAeS,IAJ7C,UAOE,6BACE,cAAC,IAAD,CACEjC,GAAE,kBAAaiC,GACf/B,UAAWqC,IACT,CAAE,kBAA2B,MAARX,IAHzB,SAMGD,MAIL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BACS,OAANI,QAAM,IAANA,KAAQD,KACP,cAAC,IAAD,CACEjC,GAAE,yBAAakC,QAAb,IAAaA,OAAb,EAAaA,EAAQD,MACvB/B,UAAU,kBAFZ,SAIG8B,IAGHA,GAAc,MAGlB,6BACS,OAANK,QAAM,IAANA,KAAQJ,KACP,cAAC,IAAD,CACEjC,GAAE,yBAAaqC,QAAb,IAAaA,OAAb,EAAaA,EAAQJ,MADzB,SAGGF,IAGHA,GAAc,QAvCbJ,EA4CV,QAIR,ECxFYa,EAAY,WACvB,MAA4BC,mBAAmB,IAA/C,mBAAOlB,EAAP,KAAemB,EAAf,KACA,EAA8CD,oBAAS,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA0CL,oBAAS,GAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KAyBA,OAvBAC,qBAAU,WACR,IAAMC,EAAU,iDAAG,+FACjBJ,GAAW,GACXF,GAAmB,GACnBI,GAAiB,GAHA,kBAKTtC,IACHK,MAAK,SAAAoC,GAAI,OAAIT,EAAUS,EAAd,IANG,OAQO,IAAlB5B,EAAO6B,QACTJ,GAAiB,GATJ,gDAYfJ,GAAmB,GACnBI,GAAiB,GAbF,yBAefF,GAAW,GAfI,4EAAH,qDAmBhBI,GACD,GAAE,IAGD,qCACE,oBAAIhD,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG2C,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACEtB,OAAQA,IAGXoB,GACC,cAAC,EAAD,IAEDI,GACC,cAAC,EAAD,WAMX,ECpDYM,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMnD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUvD,GAAG,QAEzC,eAAC,IAAD,CAAOsD,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,SAGrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAfhB,ECCnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.6de3c39a.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={\n        ({ isActive }) => classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        )\n      }\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar:FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\n\nexport const Home: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage:FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\n\nexport const EmptyResponseError: FC = () => {\n  return (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { FC } from 'react';\n\nexport const LoadingError: FC = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(({\n          name,\n          sex,\n          born,\n          died,\n          fatherName,\n          motherName,\n          slug,\n        }) => {\n          const mother = people.find(\n            (mom) => motherName === mom.name,\n          );\n          const father = people.find(\n            (dad) => fatherName === dad.name,\n          );\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={name}\n              className={classnames({\n                'has-background-warning': personSlug === slug,\n              })}\n            >\n              <td>\n                <Link\n                  to={`/people/${slug}`}\n                  className={classnames(\n                    { 'has-text-danger': sex === 'f' },\n                  )}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother?.slug ? (\n                  <Link\n                    to={`/people/${mother?.slug}`}\n                    className=\"has-text-danger\"\n                  >\n                    {motherName}\n                  </Link>\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n              <td>\n                {father?.slug ? (\n                  <Link\n                    to={`/people/${father?.slug}`}\n                  >\n                    {fatherName}\n                  </Link>\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { EmptyResponseError } from '../../components/EmptyResponseError';\nimport { Loader } from '../../components/Loader';\nimport { LoadingError } from '../../components/LoadingError';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types/Person';\n\nexport const People:FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [emptyResponse, setEmptyResponse] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      setLoading(true);\n      setHasLoadingError(false);\n      setEmptyResponse(false);\n      try {\n        await getPeople()\n          .then(data => setPeople(data));\n\n        if (people.length === 0) {\n          setEmptyResponse(true);\n        }\n      } catch {\n        setHasLoadingError(true);\n        setEmptyResponse(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <PeopleTable\n              people={people}\n            />\n          ) }\n          {hasLoadingError && (\n            <LoadingError />\n          )}\n          {emptyResponse && (\n            <EmptyResponseError />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { Home } from './pages/Home';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { People } from './pages/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"people\">\n            <Route index element={<People />} />\n            <Route path=\":personSlug\" element={<People />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport 'bulma/css/bulma.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nimport { App } from './App';\r\n\r\ncreateRoot(document.getElementById('root') as HTMLDivElement)\r\n  .render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n  );\r\n"],"sourceRoot":""}